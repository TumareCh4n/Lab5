public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        Scoreboard scoreboard = new Scoreboard();

        String opcion = "";

        System.out.println("=== Bienvenido ConnectFour ===");

        while (!opcion.equals("5")) {
            System.out.println("\n--- Menú Principal ---");
            System.out.println("1. Registrar jugador");
            System.out.println("2. Listar jugadores");
            System.out.println("3. Iniciar partida");
            System.out.println("4. Ver estadísticas de un jugador");
            System.out.println("5. Salir");
            System.out.print("Seleccione una opción: ");
            opcion = scanner.nextLine();

            switch (opcion) {
                case "1":
                    System.out.print("Ingrese nombre del jugador a registrar: ");
                    String nombreJugador = scanner.nextLine();
                    if (scoreboard.CheckPlayer(nombreJugador)) {
                        System.out.println("Jugador ya registrado.");
                    } else {
                        scoreboard.RegisterPlayer(nombreJugador);
                        System.out.println("Jugador registrado correctamente.");
                    }
                    break;

                case "2":
                    System.out.println("--- Jugadores registrados ---");
                    Player[] jugadores = scoreboard.WinRange(0, 1000);
                    for (Player p : jugadores) {
                        System.out.println("- " + p.GetPlayerName());
                    }
                    break;

                case "3":
                    System.out.print("Ingrese nombre del Jugador A: ");
                    String jugadorA = scanner.nextLine();
                    System.out.print("Ingrese nombre del Jugador B: ");
                    String jugadorB = scanner.nextLine();

                    if (!scoreboard.CheckPlayer(jugadorA) || !scoreboard.CheckPlayer(jugadorB)) {
                        System.out.println("Ambos jugadores deben estar registrados para iniciar una partida.");
                        break;
                    }

                    ConnectFour juego = new ConnectFour('X');
                    Game partida = new Game("", jugadorA, jugadorB, juego);
                    String ganador = partida.play();

                    if (!ganador.equals("")) {
                        String perdedor = (ganador.equals(jugadorA)) ? jugadorB : jugadorA;
                        scoreboard.AddGameResult(ganador, perdedor, false);
                    } else {
                        scoreboard.AddGameResult(jugadorA, jugadorB, true);
                    }
                    break;

                case "4":
                    System.out.print("Ingrese nombre del jugador: ");
                    String consultaJugador = scanner.nextLine();
                    if (!scoreboard.CheckPlayer(consultaJugador)) {
                        System.out.println("Jugador no encontrado.");
                    } else {
                        Player p = scoreboard.WinRange(0, 1000)
                                              [Arrays.asList(scoreboard.WinRange(0, 1000))
                                                     .indexOf(scoreboard.WinRange(0, 1000)
                                                     [Arrays.asList(scoreboard.WinRange(0, 1000)).indexOf(p -> p.GetPlayerName().equals(consultaJugador))])];
                        p.PrintWeas();
                    }
                    break;

                case "5":
                    System.out.println("Hasta luego. Gracias por jugar.");
                    break;

                default:
                    System.out.println("Opción inválida.");
            }
        }

        scanner.close();
    }
}
